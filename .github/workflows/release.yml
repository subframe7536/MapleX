name: Release Font

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      cn:
        description: 'Include Chinese version (add "--cn" to build args)'
        required: false
        default: false
        type: boolean
      feat:
        description: 'Enable features, split by "," (add "--feat feat1,feat2" to build args)'
        required: false
        default: ''
        type: string
      build_args:
        description: 'Args for build.py'
        required: false
        default: ''
        type: string
jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Checkout branch
        run: git checkout variable

      - name: Install ftcli
        run: python -m pip install foundrytools-cli==1.1.22

      - name: Run release script
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            python release.py
            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'
            set +e
            git add woff2
            git commit -m "Update woff2"
            git push
          else
            build_args="${{ github.event.inputs.build_args }} --archive"
            if [ ${{ github.event.inputs.cn }} ]; then
              build_args="$build_args --cn"
            fi
            if [ ${{ github.event.inputs.feat }} ]; then
              build_args="$build_args --feat ${{ github.event.inputs.feat }}"
            fi
            python build.py $build_args
          fi

      - name: Create release
        run: |
          echo "$TAG" >> NOTES
          if [ "${{ github.event_name }}" == "push" ]; then
            TAG=${{ github.ref_name }}
            FILES=release/*.*
            STATUS="--draft"
            NOTES="--notes-from-tag"
          else
            echo "### Build arguments\n\n${{ github.event.inputs.build_args }}" >> _NOTES
            echo "### Configuration\n\n```\n$(python release.py ${{ github.event.inputs.build_args }} --dry)\n```" >> _NOTES
            TAG="v$(date +%s)"
            FILES=fonts/archive/*.*
            STATUS=""
            NOTES="--notes-file _NOTES"
          fi
          gh release create $TAG $FILES --generate-notes --notes-file NOTES $STATUS --target variable
